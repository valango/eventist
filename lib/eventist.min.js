/*!
 Eventist: event emitter for modular designs.
 */
!function(t){"use strict";function e(){return this instanceof e?(this._events={},void(this._depth=0)):new e}var n="function",i="string",r="object",s=void 0,o="_eventistMark",u="_eventistOnce",f=Array.prototype.slice,h={},c=function(t){throw new TypeError("Eventist: "+t)},l=function(t){n!==typeof t&&c("A callable argument is expected!")},p=function(t){i!==typeof t&&c("Event type must be string!")},a=e.prototype;a.execute=function(t,e){return t.apply(this,e)},a.on=function(t,e){var n,i=this._events;return p(t),l(e),(n=i[t])!==s?n.push(e):i[t]=[e],this},a.once=function(t,e){p(t),l(e);var n=this,i=function(){var r=e.apply(n,arguments);return n.off(t,i),r};return i[o]=h,i[u]=e,this.on(t,i)},a.off=function(t,e){var n,i,r,f=this._events;if(p(t),(n=f[t])!==s){if(e===!0)return delete f[t],this;for(i=n.length;--i>=0;)((r=n[i])===e||r[o]===h&&r[u]===e)&&(n.splice(i,1),n.length===(i=0)&&delete f[t])}return this},a.emit=function(t){var e,n,i,r,o=s,u=0;if(n=f.call(arguments),n.shift(1),(e=this._events[t])!==s){e=e.slice(),i=this.execute.bind(this),r=e.length,this._depth+=1;try{do o=i(e[u],n,t);while(o===s&&++u<r)}catch(h){throw this._depth-=1,h}this._depth-=1}return o},a.send=function(t){var e=this,i=f.call(arguments);n===typeof t?i.shift(1):t=null,setTimeout(function(){var n,r=null;try{n=e.emit.apply(e,i)}catch(s){if(!t)throw s;r=s}t&&t(r,n,i)},0)},a.depth=function(){return this._depth},a.info=function(){var t,e={},n=this._events;for(t in n)e[t]=n[t].length;return e},t=t||this,n===typeof define&&define.amd&&r===typeof define.amd?define(function(){return e}):r===typeof module&&module.exports?module.exports=e:t.Eventist=e}.call(this);